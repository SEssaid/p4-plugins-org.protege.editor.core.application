<?xml version = "1.0" encoding = "utf-8"?>
<project name = "core" default = "compile" basedir = "..">

        <property name = "distribution.jarfile" value = "${dist.dir}/bundles/org.protege.editor.core.application.jar"/>
        <property name = "lib.dir" value = "${core.dir}/lib"/>
        <property name = "resources.dir" value = "${core.dir}/icons"/>
        <property name = "src.dir" value = "${core.dir}/src"/>

        <!-- =================================================================== -->
        <!-- Classpath declaration - used in the "compile" target -->
        <!-- =================================================================== -->
        <path id = "local.classpath">    
            <pathelement path="${commonlibs.jar}"/>
            <path refid="commonlibs.classpath"/>
            <path refid = "osgi.libs"/>
            <path refid="core.classpath"/>
        </path>

        <!-- =================================================================== -->
        <!-- INIT -->
        <!-- =================================================================== -->
        <target name = "init">
          <echo message="---------------Building the core editor Bundle-------------"/>
          <tstamp/>
          <mkdir dir = "${core.classes}"/>
        </target>  

        <!-- =================================================================== -->
        <!-- COMPILE -->
        <!-- =================================================================== -->
        <target name = "compile" depends = "init">    
                <javac srcdir = "${src.dir}" 
                       destdir = "${core.classes}" 
                       debug = "${debug}" 
                       source = "${source}" 
                       includeAntRuntime = "${includeAntRuntime}">
                        <classpath refid = "local.classpath"/>
                </javac>
        </target>


        <target name="copy.resources">
            <copy todir="${core.classes}">
                <fileset dir="${resources.dir}"/>
            </copy>
            <copy file="${core.dir}/plugin.xml" todir="${core.classes}"/>
            <copy todir="${core.classes}/lib">
                <fileset dir="${core.dir}/lib"/>
            </copy>
        </target>

        <!-- =================================================================== -->
        <!-- BND -->
        <!-- =================================================================== -->

        <target name = "bnd" depends = "compile, copy.resources">
            <taskdef resource="aQute/bnd/ant/taskdef.properties"
                     classpath="tools/bnd.jar"/> 
            <echo message="Analyzing java bytecode to generate OSGi imports and exports"/>
            <taskdef resource="aQute/bnd/ant/taskdef.properties"
                     classpath="tools/bnd.jar"/> 
            <bnd classpath  = "${core.classes}"
                 files      = "${core.dir}/META-INF/manifest.bnd"
                 eclipse    = "false"
                 failok     = "false"
                 exceptions = "true"
                 output     = "${core.jar}"/>
            <echo message="Core editor bundle built"/>
        </target>

        <!-- ===================================================================================== -->
        <!-- SRC.BUNDLE - create a bundle with sources for developers -->
        <!-- ===================================================================================== -->
        <target name="src.bundle" depends="copy.resources,compile">
          <zip destfile="${core.classes}/${core.name}src.zip">
            <fileset dir="${src.dir}"/>
          </zip>
          <antcall target="bundle"/>
        </target>


        
        <!-- ===================================================================================== -->
        <!-- BUNDLE - create the distribution JAR file that goes in the OSGi "plugins" directory -->
        <!-- ===================================================================================== -->
        <target name = "bundle" 
                depends = "compile, copy.resources">
          <jar basedir = "${core.classes}"
               destfile = "${core.jar}"
               manifest = "${core.dir}/META-INF/MANIFEST.MF"/>
        </target>

        <target name = "junit"/>

</project>
