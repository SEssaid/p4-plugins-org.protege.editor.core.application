<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>protege4</groupId>
	<artifactId>org.protege.editor.core.application</artifactId>
	<packaging>bundle</packaging>
	<name>Ontology Editing Infrastructure</name>
	<version>4.1.0.213_SNAPSHOT</version>
    <!-- <version>4.2.0.b282_2012_30_09_2345</version> -->

	<parent>
		<groupId>protege4</groupId>
		<artifactId>masterpom</artifactId>
		<version>1.0.3</version>
	</parent>


	<properties>
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
	</properties>

	<distributionManagement>
		<!-- If this pom.xml is executed on a developer's machine (mvn deploy) 
			the developer's local repositories will be used, if executed on the BMIR the BMIR repositories. -->
		<repository>
			<id>releases</id>
			<name>Releases</name>
			<url>${nexus.path}/bmir-release</url>
		</repository>

		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshots</name>
			<url>${nexus.path}/snapshots</url>
			<!-- <uniqueVersion>false</uniqueVersion> -->
		</snapshotRepository>
		
		
	</distributionManagement>

	<dependencies>
        <dependency>
            <groupId>org.eclipse.osgi</groupId>
            <artifactId>org.eclipse.osgi</artifactId>
            <version>3.6.0.v20100517</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.equinox</groupId>
            <artifactId>org.eclipse.equinox.registry</artifactId>
            <version>3.5.0.v20100503</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>protege4</groupId>
          <artifactId>org.protege.common</artifactId>
          <version>4.2.0.b269_2012_04_03_0637</version>
        </dependency>
        <dependency>
            <groupId>mdock</groupId>
            <artifactId>mdock</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.swinglabs</groupId>
            <artifactId>swing-worker</artifactId>
            <version>1.1</version>
        </dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.10</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<description>Ontology Editing Infrastructure</description>
	<organization>
		<name>Stanford University, BMIR</name>
	</organization>

	<build>
        <!-- Backwards compatibility fixes that should be removed -->
        <sourceDirectory>src</sourceDirectory>
        <resources>
          <resource>
            <directory>resources</directory>
          </resource>
        </resources>
        <testSourceDirectory>junit</testSourceDirectory>
        <testResources>
          <testResource>
            <directory>junit/ontologies</directory>
          </testResource>
        </testResources>
        <!-- End of backwards compatibility fixes that should be removed -->

		<plugins>
	        <!-- property reader for version information found in
	             maven branch at svn revision 21046 -->
            <plugin>
              <groupId>org.apache.felix</groupId>
              <artifactId>maven-bundle-plugin</artifactId>
              <version>1.4.0</version>
              <extensions>true</extensions>
              <configuration>
                <instructions>
                  <Bundle-SymbolicName>org.protege.editor.core.application;singleton:=true</Bundle-SymbolicName>
                  <Bundle-Vendor>The Protege Development Team</Bundle-Vendor>
                  <Export-Package>
                    org.protege.editor.core,
                    org.protege.editor.core.*
                  </Export-Package>
                  <Import-Package>
                      !junit.framework,!com.sun.*,
                      org.eclipse.core.runtime;registry=split,
                      *
                  </Import-Package>
                  <Embed-Dependency>
                      mdock
                  </Embed-Dependency>
                  <Bundle-Activator>org.protege.editor.core.ProtegeApplication</Bundle-Activator>
                  <Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
                  <Include-Resource>plugin.xml,{maven-resources}</Include-Resource>
                </instructions>
                <executions>
                  <execution>
                    <id>bundle-manifest</id>
                    <phase>install</phase>
                    <goals>    
                      <goal>manifest</goal>
                    </goals>   
                  </execution>
                </executions>
              </configuration>
            </plugin>

			<!-- Create jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>
		
		
			<!-- Execution of unit tests Generates output for reporting plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- We set skip to true. So the unit tests can be explicitly defined 
						in xml file reference below -->
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<suiteXmlFiles>
								<suiteXmlFile>src/test/resources/unit-tests.xml</suiteXmlFile>
							</suiteXmlFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Compile Java Code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
